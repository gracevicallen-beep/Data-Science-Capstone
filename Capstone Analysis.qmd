---
title: "Generalized Additive Models in Fraud Detection and Pattern Recognition"
subtitle: "Data Science Capstone Project"
author: "Grace Allen, Kesi Allen, Sonya Melton, Pingping Zhou"
date: "October 7, 2025"
format: 
  html:
    code-fold: true       # Allows folding of code chunks
    self-contained: true  # Packages images and CSS in the HTML
output-dir: report1      # Folder where rendered HTML will go
bibliography: references.bib
csl: apa.csl 
execute: 
  warning: false
  message: false
css: styles.css 
course: "Capstone Projects in Data Science"
editor:
  markdown: 
    wrap: 72
---

[**Slides**](slides.html){target="_blank"}

[**Literature Review**](Literature%20Review.html)

## Introduction

Generalized Additive Models (GAMs) have emerged as a powerful extension
of traditional regression methods, offering a balance between predictive
flexibility and interpretability. Originally introduced by @Hastie_1986
and @Hastie_Tibshirani_1990, GAMs build on the framework of Generalized
Linear Models (GLMs) by replacing the strictly linear predictor with a
sum of smooth, data-driven functions. This structure allows models to
capture complex nonlinear relationships while preserving
interpretability, making them especially valuable in fields where
transparency is critical, including finance, healthcare, auditing, and
cybersecurity. Their ability to represent nonlinear effects in a way
that stakeholders and regulators can directly review has positioned GAMs
as an important tool in modern statistical and machine learning
applications.

The foundations of GAMs are grounded in penalized likelihood estimation
and iteratively reweighted least squares [@HalDa_2012], while modern
implementations such as the mgcv package in R [@Wood_2017; @Wood_2025]
have greatly improved their efficiency, scalability, and robustness.
Penalization techniques introduced by @Wood_2017 allow smoothness
control, prevent overfitting, and address issues such as concurvity,
making GAMs well-suited for noisy or high-dimensional datasets. These
developments have made GAMs increasingly practical for real-world
applications. Transparency also remains central: as @Zlaoui_2018
illustrates, GAMs provide interpretable risk curves that visualize how
each feature influences an outcome, offering critical insight in
high-stakes environments.

Applications of GAMs across different fields underscore their
versatility. In ecology, they have been used to map species
distributions and detect environmental thresholds [@Guisan_2002;
@Detmer_2025]. In biostatistics, they have informed studies of health
outcomes such as alcohol use [@White_2020]. In finance and auditing,
GAMs have uncovered irregular revenue patterns and detected fraudulent
Medicare billing, with results that auditors and regulators could
interpret directly [@Brossart_2015; @Miller_2025]. Even in challenging
contexts where noisy or uneven data reduce precision, studies have shown
that recall and interpretability remain strong advantages of the
approach [@Tragouda_2024; @Guisan_2002; @Detmer_2025].

Building on these foundations, researchers have proposed several
extensions and innovations. Functional and Dynamic GAMs account for
functional predictors and temporal dependencies, enhancing model
flexibility for forecasting and time-series applications [@FGAM_2015;
@DGAM_2021]. Neural-inspired variants such as Neural Additive Models
[@Agarwal_2021] and GAMformer [@GAMformer_2023] integrate deep learning
techniques, improving computational efficiency and extending the ability
of GAMs to model complex nonlinear data. Bayesian approaches provide
clearer ways to quantify uncertainty and guide variable selection
[@Miller_2025]. Other tools such as @GamHP_2020 strengthen transparency
by quantifying predictor contributions. Furthermore, Microsoft’s
Explainable Boosting Machine explored by @Lou_Caruana_Gehrke_2012 adapts
the GAM framework to include limited interactions, improving predictive
performance while retaining interpretability.

Research also highlights the role of GAMs within broader fraud detection
strategies. In financial contexts, @Tragouda_2024 applied GAMs to bank
cheque fraud, demonstrating high recall (77.8%) even when data imbalance
reduced precision. @Brossart_2015 used GAMs to identify fraudulent
Medicare billing, showing that interpretability helped build auditor
trust despite challenges with adapting to emerging patterns.
@Miller_2025 combined GAMs with ensemble models such as random forests
to detect irregular revenue in financial statements, producing
visualizations auditors could use directly. Beyond GAMs, graph-based
frameworks have emerged as complementary approaches. For example,
@Chang_2022 introduced Graph Neural Additive Networks (GNANs), extending
GAMs to graph-structured data such as transaction networks and achieving
84.5% ROC-AUC in detecting suspicious users. @Zhang_2025 demonstrated
that GAMs could model sequential features in telecom fraud detection but
were often outperformed by graph neural networks (GNNs) when modeling
complex relational data.

In parallel, other interpretable machine learning techniques continue to
shape the fraud detection landscape. @Hanagandi_2023 applied regularized
generalized linear models, including Ridge, Lasso, and ElasticNet, to
highly imbalanced credit card fraud datasets, achieving strong
performance (up to 98.2% accuracy with Ridge regression) and showing
that careful preprocessing is essential for real-time fraud detection.
Generative approaches also contribute: @Zhu_2023 demonstrated how
Generative Adversarial Networks (GANs) can generate synthetic
transaction data to improve robustness against class imbalance.
Collectively, these innovations expand the interpretability-performance
frontier and highlight how transparent modeling frameworks, including
GAMs and their extensions, remain central to modern fraud analytics.

The primary objectives of this analysis are to leverage the fraud
detection transactions dataset to build and evaluate effective fraud
detection models using Generalized Additive Models (GAMs). Specifically,
the goals are:

-   Develop Robust Models: Construct models that accurately distinguish
    between fraudulent and legitimate transactions using GAMs.

-   Identify Key Features: Pinpoint significant variables that
    contribute to fraud risk, improving interpretability and providing
    actionable insights for financial institutions.

-   Provide Practical Insights: Generate findings that enhance anomaly
    detection, risk management, and financial security strategies, while
    addressing challenges such as noise and class imbalance.

In this study, we apply GAM methodology using RStudio and the mgcv
package to the Fraud Detection Transactions Dataset from Kaggle
[@Ashar_2024]. This synthetic yet realistic dataset provides an
opportunity to test GAMs in a controlled but meaningful context. Our aim
is to evaluate whether GAMs can balance predictive strength with
interpretability, creating models that are both accurate and transparent
for fraud detection.

## Methods

Formally, a GAM can be expressed as:

$$ g(\mu) = \alpha + s_1(X_1) + s_2(X_2) + \dots + s_p(X_p) $$

where $g(\mu)$ is the link function (e.g., logit for binary outcomes or
identity for continuous outcomes), $\alpha$ is the intercept, and
$s_j(X_j)$ are smooth functions of the predictor variables $X_j$. This
structure allows each predictor to contribute a smoothed effect to the
model, capturing complex patterns in the data without obscuring the
individual influence of each variable. By balancing flexibility and
clarity, GAMs offer a practical alternative to fully nonparametric
methods, which can become computationally intensive and difficult to
interpret. The additive smooth functions $s_j(X_j)$ are at the heart of
GAMs, enabling the model to uncover nonlinear patterns while maintaining
interpretability for each predictor.

## Analysis and Results

### Data Exploration and Visualization

#### **Data set Description**

The Fraud Detection Transactions Dataset [@Ashar_2024] is a meticulously
crafted, synthetic dataset that replicates real-world financial
transaction patterns, making it a robust resource for building and
testing fraud detection models. Hosted on Kaggle, it is tailored for
binary classification tasks, with transactions labeled as fraudulent (1)
or non-fraudulent (0), and is designed to simulate the complexity of
financial systems while ensuring ethical data usage by avoiding real
user information. The dataset’s realistic design captures nuanced fraud
patterns, such as clustered fraudulent transactions, subtle anomalies,
or irregular user behaviors, providing a challenging yet representative
environment for machine learning applications in anomaly detection, risk
assessment, and fraud prevention.

The dataset’s synthetic nature replicates realistic fraud patterns,
including clustered fraudulent transactions, subtle anomalies, and
irregular user behaviors, while avoiding privacy concerns. Although the
exact number of records is unspecified, the data set is designed to be
sufficiently large and diverse, with a mix of typical transactions and
rare fraudulent events to address class imbalance — a common challenge
in fraud detection. Potential data quality issues, such as noisy data,
missing values, or outliers, reflect real-world complexities and require
preprocessing steps like data cleaning, categorical encoding, or
normalization. These challenges necessitate robust modeling techniques
to handle noise and ensure accurate predictions.

#### **Key Characteristics**

The dataset simulates real-world financial transaction patterns,
capturing diverse user behaviors and transaction characteristics while
ensuring ethical data usage through its synthetic design. It is tailored
for binary classification tasks, with transactions labeled as fraudulent
(1) or non-fraudulent (0), and includes 21 features categorized as
follows:

-   Size and Scope: Contains thousands of individual transactions, each
    labeled as either fraudulent (1) or non-fraudulent (0).

-   Features (21 total):

    -   Numerical variables: transaction amounts, risk scores, balances,
        and other continuous measures.

    -   Categorical variables: transaction types (e.g., payment,
        transfer, withdrawal), device types, and merchant categories.

    -   Temporal variables: transaction time, day, and sequencing
        patterns that capture behavioral dynamics.

-   Label Distribution: Fraudulent transactions represent a small
    percentage of the data, reflecting the real-world class imbalance in
    fraud detection problems.

-   Realism: Although synthetic, the dataset mirrors real-world fraud
    scenarios by including behavioral signals, unusual spending
    patterns, and high-risk profiles.

Flexibility: Supports various modeling approaches, from interpretable
methods (e.g., GAMs, logistic regression) to high-performance ensemble
models (e.g., XGBoost).

### Modeling and Results

## Conclusion

## References
